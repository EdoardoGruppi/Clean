name: Release

permissions:
  contents: write

on:
  push:
    tags:
      - v[0-9]+.*

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/create-gh-release-action@v1
        with:
          # (required) GitHub token for creating GitHub Releases.
          token: ${{ secrets.GITHUB_TOKEN }}

  upload-assets:
    needs: create-release
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            suffix: ""
            container: ""
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            suffix: rocky-9
            container: rockylinux:9
          - target: x86_64-apple-darwin
            os: macos-latest
            suffix: ""
            container: ""
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            suffix: ""
            container: ""
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}
    steps:
      - name: Install Rust (if in container)
        if: matrix.container != ''
        run: |
          dnf install -y curl gcc make
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      - name: Show Rust and GLIBC versions
        run: |
          rustc --version
          ldd --version
      - uses: actions/checkout@v4
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          # (required) Comma-separated list of binary names (non-extension portion of filename) to build and upload.
          # Note that glob pattern is not supported yet.
          bin: clean
          # (optional) Target triple, default is host triple.
          # This is optional but it is recommended that this always be set to
          # clarify which target you are building for if macOS is included in
          # the matrix because GitHub Actions changed the default architecture
          # of macos-latest since macos-14.
          target: ${{ matrix.target }}
          # (optional) On which platform to distribute the `.tar.gz` file.
          # [default value: unix]
          # [possible values: all, unix, windows, none]
          tar: all
          # (optional) On which platform to distribute the `.zip` file.
          # [default value: windows]
          # [possible values: all, unix, windows, none]
          zip: all
          # (required) GitHub token for uploading assets to GitHub Releases.
          token: ${{ secrets.GITHUB_TOKEN }}
          archive: clean-${{ matrix.suffix }}-${{ matrix.target }}
